01	#include<stdio.h>
02	#define N 20
03	void main()
04	{
05		int a[N][N],n,i,j,k;
06		/*输入矩阵的阶*/
07		while(1)
08		{
09			printf("请输入一个正整数n(n≤20,n是奇数):");
10			scanf("%d",&n);			
11			if(n!=0&&n<=20&&n%2!=0) 	
12			{
13				printf("%d阶魔方矩阵.\n",n);
14				break;
15			}
16		}
17		/*初始化二维数组*/
18		for(i=0;i<n;i++)
19			for(j=0;j<n;j++)
20				a[i][j]=0;
21		/*构造魔方阵*/
22			i=0; 				
23			j=n/2; 					
24			a[i][j]=1; 			/*1放在第1行中间一列*/
25			k=2;
26			while(k<=n*n)
27			{
28				i=i-1;			/*行号减1*/
29				j=j+1;		/*列号增1*/
30	/*如果上一个数位于第1行第n列，当前的数应在上一个数的下面*/
31				if(i<0&&j>n-1)	
32				{
33					i=i+2;		
34					j=j-1; 	
35				}
36				else			
37				{
38			/*如果上一个数位于第1行，则当前的数应位于最后一行*/
39					if(i<0)							
40						i=n-1;	
41			/*如果上一个数位于第n列，则将当前的数应位于第1列*/
42					if(j>n-1)		
43						j=0;
44				}
45				if(a[i][j]==0)	/*当前的数保存到数组中*/
46					a[i][j]=k;
47				else	/*如果已经有数存在，则放在上一个数的下面*/
48				{
49					i=i+2; 		
50					j=j-1; 	
51					a[i][j]=k; 	
52				}
53				k++;			/*k增加1，准备存放下一个数*/
54			}
55			/*输出魔方阵*/
56			for(i=0;i<n;i++)	
57			{
58				for(j=0;j<n;j++)	
59					printf("%4d",a[i][j]);
60				printf("\n");	
61			}
62	}